<?xml version="1.0" encoding="utf-8" ?>
<!--
    ==================================================
        Default file for external builds
    ==================================================
-->
<Project DefaultTargets="BuildAll" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="3.5">
    <!-- This file must be imported first -->
    <Import Project="Settings.Targets" />
    <Import Project="Common.Targets" />

    <PropertyGroup>
        <MSBuildsDependsOn>
            GetProjectsFromSolution;
            _BuildPropertiesString
        </MSBuildsDependsOn>
    </PropertyGroup>

    <!-- Import 3rd party targets -->
    <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets" Condition="$(MSBuildCommunityTasksLib) == ''"/>
    <Import Project="$(MSBuildExtensionsPath)\rod.Commons\rod.Commons.Targets" Condition="$(RodCommonsTargetsIsLoaded) == ''" />

    <!--
        Public targets
    -->
    <Target Name="BuildAll" DependsOnTargets="BuildApp;BuildAllTests"/>

    <Target Name="BuildApp" DependsOnTargets="$(MSBuildsDependsOn)" >
        <MSBuild Projects="@(AppProjects)"
                 Targets="Build"
                 Properties="%(PropertiesStrings.Identity)">
            <Output TaskParameter="TargetOutputs" ItemName="AppAssemblies"/>
        </MSBuild>

        <!-- Add all assemblies to all build assemblies -->
        <CreateItem Include="@(AppAssemblies)">
            <Output ItemName="BuildAssemblies" TaskParameter="Include"/>
        </CreateItem>
    </Target>

    <Target Name="BuildAllTests" DependsOnTargets="$(MSBuildsDependsOn)" >
        <MSBuild Projects="@(TestProjects)"
                 Targets="Build"
                 Properties="%(PropertiesStrings.Identity)" >
            <Output TaskParameter="TargetOutputs" ItemName="TestAssemblies"/>
        </MSBuild>

        <!-- Add all assemblies to all build assemblies -->
        <CreateItem Include="@(TestAssemblies)">
            <Output ItemName="BuildAssemblies" TaskParameter="Include"/>
        </CreateItem>
    </Target>

    <Target Name="BuildPerformanceTests" DependsOnTargets="$(MSBuildsDependsOn)" >
        <MSBuild Projects="@(PerformanceTestProjects)"
                 Targets="Build"
                 Properties="%(PropertiesStrings.Identity)">
            <Output TaskParameter="TargetOutputs" ItemName="TestAssemblies"/>
        </MSBuild>

        <!-- Add all assemblies to all build assemblies -->
        <CreateItem Include="@(TestAssemblies)">
            <Output ItemName="BuildAssemblies" TaskParameter="Include"/>
        </CreateItem>
    </Target>
    <Target Name="BuildAcceptanceTests" DependsOnTargets="$(MSBuildsDependsOn)" >
        <MSBuild Projects="@(AcceptanceTestProjects)"
                 Targets="Build"
                 Properties="%(PropertiesStrings.Identity)">
            <Output TaskParameter="TargetOutputs" ItemName="TestAssemblies"/>
        </MSBuild>

        <!-- Add all assemblies to all build assemblies -->
        <CreateItem Include="@(TestAssemblies)">
            <Output ItemName="BuildAssemblies" TaskParameter="Include"/>
        </CreateItem>
    </Target>

    <Target Name="BuildIntegrationTests" DependsOnTargets="$(MSBuildsDependsOn)" >
        <MSBuild Projects="@(IntegrationTestProjects)"
                 Targets="Build"
                 Properties="%(PropertiesStrings.Identity)">
            <Output TaskParameter="TargetOutputs" ItemName="TestAssemblies"/>
        </MSBuild>

        <!-- Add all assemblies to all build assemblies -->
        <CreateItem Include="@(TestAssemblies)">
            <Output ItemName="BuildAssemblies" TaskParameter="Include"/>
        </CreateItem>
    </Target>

    <Target Name="BuildUnitTests" DependsOnTargets="$(MSBuildsDependsOn)" >
        <MSBuild Projects="@(UnitTestProjects)"
                 Targets="Build"
                 Properties="%(PropertiesStrings.Identity)">
            <Output TaskParameter="TargetOutputs" ItemName="TestAssemblies"/>
        </MSBuild>

        <!-- Add all assemblies to all build assemblies -->
        <CreateItem Include="@(TestAssemblies)">
            <Output ItemName="BuildAssemblies" TaskParameter="Include"/>
        </CreateItem>
    </Target>

    <Target Name="RebuildAll" DependsOnTargets="CleanAll;BuildAll"/>

    <Target Name="CleanAll" DependsOnTargets="CleanApp;CleanTest"/>

    <Target Name="CleanApp" DependsOnTargets="$(MSBuildsDependsOn)" >
        <MSBuild Projects="@(AppProjects)"
                 Targets="Clean"
                 Properties="%(PropertiesStrings.Identity)">
        </MSBuild>
    </Target>

    <Target Name="CleanTest" DependsOnTargets="$(MSBuildsDependsOn)" >
        <MSBuild Projects="@(TestProjects)"
                 Targets="Clean"
                 Properties="%(PropertiesStrings.Identity)">
        </MSBuild>
    </Target>

    <Target Name="RunAllTests" DependsOnTargets="BuildAllTests">
        <CallTarget Targets="InternalNUnit" />
    </Target>

    <Target Name="RunPerformanceTests" DependsOnTargets="_ChangeConfigurationToRelease;BuildPerformanceTests">
        <CallTarget Targets="InternalNUnit" />
    </Target>

    <Target Name="RunAcceptanceTests" DependsOnTargets="BuildAcceptanceTests">
        <CallTarget Targets="InternalNUnit" />
    </Target>

    <Target Name="RunIntegrationTests" DependsOnTargets="BuildIntegrationTests">
        <CallTarget Targets="InternalNUnit" />
    </Target>

    <Target Name="RunUnitTests" DependsOnTargets="BuildUnitTests">
        <CallTarget Targets="InternalNUnit" />
    </Target>

    <!--
        Internal targets
    -->
    <Target Name="GetProjectsFromSolution" >

        <!-- Get all the projects associated with the solution -->
        <GetSolutionProjects Solution="$(SolutionPath)">
            <Output TaskParameter="Output" ItemName="SolutionProjects" />
        </GetSolutionProjects>

        <!-- Filter out solution folders and non .csproj items -->
        <RegexMatch Input="@(SolutionProjects)" Expression=".[\.]csproj$">
            <Output TaskParameter="Output" ItemName="Projects"/>
        </RegexMatch>

        <!-- Resolve test projects -->
        <RegexMatch Input="@(Projects)" Expression="$(TestDetectionExpression)[\.]csproj$">
            <Output TaskParameter="Output" ItemName="TestProjects"/>
        </RegexMatch>

        <RegexMatch Input="@(TestProjects)" Expression="$(PerformanceTestDetectionExpression)[\.]csproj$">
            <Output TaskParameter="Output" ItemName="PerformanceTestProjects"/>
        </RegexMatch>

        <RegexMatch Input="@(TestProjects)" Expression="$(AcceptanceTestDetectionExpression)[\.]csproj$">
            <Output TaskParameter="Output" ItemName="AcceptanceTestProjects"/>
        </RegexMatch>

        <RegexMatch Input="@(TestProjects)" Expression="$(IntegrationTestDetectionExpression)[\.]csproj$">
            <Output TaskParameter="Output" ItemName="IntegrationTestProjects"/>
        </RegexMatch>

        <RegexMatch Input="@(TestProjects)" Expression="$(UnitTestDetectionExpression)[\.]csproj$">
            <Output TaskParameter="Output" ItemName="UnitTestProjects"/>
        </RegexMatch>

        <!-- Resolve the libraries code projects -->
        <CreateItem Include="@(Projects)" Exclude="@(TestProjects)">
            <Output ItemName="AppProjects" TaskParameter="Include"/>
        </CreateItem>
        
        <Message Text="$(NEW_LINE)Resolved the following solution projects:" Importance="high" />
        <Message Text="AppProjects:$(NEW_LINE)$(TAB)@(AppProjects->'%(RelativeDir)%(FileName)%(Extension)', '$(NEW_LINE)$(TAB)')" Importance="high"/>
        <Message Text="TestProjects:$(NEW_LINE)$(TAB)@(TestProjects->'%(RelativeDir)%(FileName)%(Extension)', '$(NEW_LINE)$(TAB)')" Importance="high"/>
    </Target>

    <Target Name="_ChangeConfigurationToRelease">
        <CreateProperty Value="Release">
            <Output PropertyName="Configuration" TaskParameter="Value"/>
        </CreateProperty>
    </Target>

    <Target Name="_BuildPropertiesString" Inputs="@(AllConfigurations)" Outputs="%(Identity)">
        <CreateProperty Condition="$(Configuration) != '' AND $(Configuration) != 'ALL'"
                        Value="$(TempPropertyString);Configuration=$(Configuration)" >
            <Output PropertyName="TempPropertyString" TaskParameter="Value"/>
        </CreateProperty>

        <CreateItem Condition="$(Configuration) != 'ALL'"
                    Include="NONE"
                    AdditionalMetadata="Value=$(TempPropertyString)">
            <Output ItemName="TempPropertiesStrings" TaskParameter="Include"/>
        </CreateItem>

        <CreateItem Condition="$(Configuration) == 'ALL' AND $(TempPropertyString) != ''"
                    Include="Config=ALL"
                    AdditionalMetadata="Value=Configuration=%(AllConfigurations.Identity)%3B$(TempPropertyString)">
            <Output ItemName="TempPropertiesStrings" TaskParameter="Include"/>
        </CreateItem>

        <CreateItem Condition="$(Configuration) == 'ALL' AND $(TempPropertyString) == ''"
            Include="Config=ALL"
            AdditionalMetadata="Value=Configuration=%(AllConfigurations.Identity)">
            <Output ItemName="TempPropertiesStrings" TaskParameter="Include"/>
        </CreateItem>

        <CreateItem Include="%(TempPropertiesStrings.Value)" >
            <Output ItemName="PropertiesStrings" TaskParameter="Include"/>
        </CreateItem>
        
        <Message Text="sss @(PropertiesStrings)" />
    </Target>
</Project>
