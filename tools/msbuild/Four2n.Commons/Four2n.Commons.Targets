<?xml version="1.0" encoding="utf-8"?>
<!--
    ===========================================================
        Helper targets file for VS and external build files.
        Newest version can be always found at
        http://code.google.com/p/rodcommons/
    ===========================================================
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <PropertyGroup>
        <Four2nCommonsTargetsIsLoaded>1</Four2nCommonsTargetsIsLoaded>
    </PropertyGroup>

    <!-- ASCII Constants -->
    <PropertyGroup>
        <NEW_LINE>%0D%0A</NEW_LINE>
        <TAB>%09</TAB>
        <DOUBLE_QUOTES>%22</DOUBLE_QUOTES>
        <SPACE>%20</SPACE>
    </PropertyGroup>

    <!-- Root Path definition relative for actual build file -->
    <PropertyGroup>
        <RootPath Condition=" '$(RootPath)' == '' ">$(MSBuildProjectDirectory)</RootPath>
    </PropertyGroup>

    <!-- Helper Files -->
    <PropertyGroup>
        <IterationNumberFile Condition=" '$(IterationNumberFile)' == '' ">$(RootPath)\IterationNumber.txt</IterationNumberFile>
    </PropertyGroup>

    <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets" Condition="$(MSBuildCommunityTasksLib) == ''"/>

    <!-- 
        ============================================================
        General purpose targets used by other targets in the build
        ============================================================
    -->

    <Target Name="CalculateAssemblyVersion" DependsOnTargets="GetIterationNumber;GetSvnRevision">
        <CreateProperty Value="$(AssemblyVersion).$(IterationNumber).$(SvnRevision)">
            <Output TaskParameter="Value" PropertyName="AssemblyVersion"/>
        </CreateProperty>
        <Message Text="Calculated Assembly Version: $(AssemblyVersion)" Importance="normal"/>
    </Target>

    <Target Name="DeployWeb" DependsOnTargets="_GetWebProjectOutputDir;ResolveReferences" Condition="$(DeploymentPath) != '' and $(WebProjectOutputDir) != '' ">
        <RemoveDir Directories="$(WebProjectOutputDir)"/>
        <CallTarget Targets="_CopyWebApplication" />
    </Target>

    <Target Name="_GetWebProjectOutputDir" Condition="$(DeploymentPath) != ''">
        <PropertyGroup>
            <WebProjectOutputDir>$(DeploymentPath)\$(Configuration)\$(MSBuildProjectName)</WebProjectOutputDir>
            <OutDir>$(WebProjectOutputDir)\bin\</OutDir>
        </PropertyGroup>
    </Target>

    <!-- Gets the iteration number from file -->
    <Target Name="GetIterationNumber">
        <!-- Read the the iteration number file contents -->
        <ReadLinesFromFile File="$(IterationNumberFile)">
            <Output TaskParameter="Lines" ItemName="IterationNumberFileContents"/>
        </ReadLinesFromFile>

        <!-- Assign file contents to IterationNumber property -->
        <CreateProperty Value="@(IterationNumberFileContents->'%(Identity)')">
            <Output TaskParameter="Value" PropertyName="IterationNumber"/>
        </CreateProperty>

        <!-- If tehere is no IterationNumber, set zero -->
        <CreateProperty Value="0" Condition="$(IterationNumber) == ''">
            <Output TaskParameter="Value" PropertyName="IterationNumber"/>
        </CreateProperty>
    </Target>

    <!-- Get the revision number of the local working copy -->
    <Target Name="GetSvnRevision" Condition="$(SvnRevision) == '' or $(SvnRevision) == '-1'">
        <SvnVersion LocalPath="$(MSBuildProjectDirectory)" ContinueOnError="true">
            <Output TaskParameter="Modifications" PropertyName="SvnModified" />
        </SvnVersion>

        <SvnVersion
            LocalPath="$(MSBuildProjectDirectory)"
            UseLastCommittedRevision="!$(SvnModified)"
            ContinueOnError="true"
            Condition="$(SvnRevision) == ''">
            <Output TaskParameter="Revision" PropertyName="SvnRevision"/>
        </SvnVersion>

        <CreateProperty Value="0" Condition="$(SvnRevision) == '' or $(SvnRevision) == '-1'">
            <Output PropertyName="SvnRevision" TaskParameter="ValueSetByTask" />
        </CreateProperty>
    </Target>

    <Target Name="IncludeGeneratedAssemblyInfo" DependsOnTargets="GenerateAssemblyInfo">
        <CreateItem Include="$(AssemblyInfoFile)">
            <Output ItemName="Compile" TaskParameter="Include"/>
        </CreateItem>
        <Touch Files="$(AssemblyInfoFile)" Time="2000-01-01" Condition="$(IsCompileUpToDate) == ''" />
    </Target>

    <Target Name="GenerateAssemblyInfo" DependsOnTargets="CalculateAssemblyVersion" >
        <AssemblyInfo CodeLanguage="CS"
            OutputFile="$(AssemblyInfoFile)"
            AssemblyTitle="$(AssemblyTitle)"
            AssemblyDescription="$(AssemblyDescription)"
            AssemblyCompany="$(AssemblyCompany)"
            AssemblyCopyright="$(AssemblyCopyright)"
            AssemblyProduct="$(AssemblyProduct)"
            AssemblyVersion="$(AssemblyVersion)"
            AssemblyFileVersion="$(AssemblyVersion)"
            AllowPartiallyTrustedCallers="$(AllowPartiallyTrustedCallers)"
            Guid="$(AssemblyGuid)" />
    </Target>

    <Target Name="SetIsCompileUpToDate" DependsOnTargets="_InitializeIsCompileUpToDate;_CheckIsCompileUpToDate" />

    <Target Name="_CheckIsCompileUpToDate"
            Inputs="$(MSBuildAllProjects);
                    @(Compile);
                    @(_CoreCompileResourceInputs);
                    $(ApplicationIcon);
                    $(AssemblyOriginatorKeyFile);
                    @(ReferencePath);
                    @(CompiledLicenseFile);
                    @(EmbeddedDocumentation);
                    $(Win32Resource);
                    $(Win32Manifest);
                    @(CustomAdditionalCompileInputs)"
            Outputs="@(DocFileItem);
                    @(IntermediateAssembly);
                    @(_DebugSymbolsIntermediatePath);
                    $(NonExistentFile);
                    @(CustomAdditionalCompileOutputs)">
        <CreateProperty Value="false">
            <Output PropertyName="IsCompileUpToDate" TaskParameter="ValueSetByTask"/>
        </CreateProperty>
        <Message Text="_CheckIsCompileUpToDate $(IsCompileUpToDate)" />
    </Target>

    <Target Name="_InitializeIsCompileUpToDate">
        <CreateProperty Value="true" >
            <Output PropertyName="IsCompileUpToDate" TaskParameter="ValueSetByTask" />
        </CreateProperty>
        <Message Text="_InitializeIsCompileUpToDate $(IsCompileUpToDate)" />
    </Target>
</Project>
